# Workflow derived from https://github.com/r-lib/actions/blob/v2-branch/examples/check-standard.yaml

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,    r: 'release'}
          - {os: windows-latest,  r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      # JAGS install. Inspired by https://github.com/boydorr/SpARKjags/blob/master/.github/workflows/test-build.yaml
      # but updated with ignoring certificates and redirects.
      # JAGS is automatically installed on linux via the rjags package.
      - name: Install JAGS (if Windows)
        if: runner.os == 'Windows'
        run: |
          curl.exe -o wjags.exe -L0 -k --url https://downloads.sourceforge.net/project/mcmc-jags/JAGS/4.x/Windows/JAGS-4.3.1.exe
          wjags.exe /S
          del wjags.exe
        shell: cmd

      - name: Install JAGS (if macOS)
        if: runner.os == 'macOS'
        # This worked before R 4.3: brew install jags
        run: |
          curl -o wjags.pkg -L0 -k --url https://downloads.sourceforge.net/project/mcmc-jags/JAGS/4.x/Mac%20OS%20X/JAGS-4.3.2.pkg
          sudo installer -pkg wjags.pkg -target /
          rm wjags.pkg

      # R
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::covr
          needs: check, coverage

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true

      # Run test coverage on the fastest-to-run job
      - name: Test coverage
        if: matrix.config.os == 'macos-latest' && matrix.config.r == 'release'
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}
